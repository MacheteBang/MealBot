@* This is a callback page where Google redirects the user after successful authentication *@

@page "/google-callback"
@attribute [AllowAnonymous]

@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager _navigationManager

@using Microsoft.AspNetCore.Authorization
@using System.Text.Json

@if (_accessToken is null)
{
    <p Text="Hang on, we're signing you in.."></p>
}
else
{
    <p>
        You have successfully signed in with Google. Here is your access token:
    </p>
    <p>
        @JsonSerializer.Serialize(_accessToken, new JsonSerializerOptions { WriteIndented = true })
    </p>
}


@code
{
    // The authorization code sent by Google after successful authentication
    [SupplyParameterFromQuery(Name = "code")]
    public string? AuthorizationCode { get; set; }

    // Optional state included in the redirect URI
    [SupplyParameterFromQuery(Name = "state")]
    public string? State { get; set; }

    private AccessTokenResponse? _accessToken { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrWhiteSpace(AuthorizationCode))
        {
            using var client = HttpClientFactory.CreateClient();

            string authorizationCode = Uri.EscapeDataString($"{AuthorizationCode}");
            string callBackUri = Uri.EscapeDataString($"{_navigationManager.BaseUri}google-callback");
            var request = new HttpRequestMessage(HttpMethod.Get,
            $"auth/tokens/google?authorizationCode={authorizationCode}&callBackUri={callBackUri}");

            try
            {
                var response = await client.SendAsync(request);
                if (response.IsSuccessStatusCode)
                {
                    _accessToken = await response.Content.ReadFromJsonAsync<AccessTokenResponse>();
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.ToString());
            }
        }
    }
}